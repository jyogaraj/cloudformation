AWSTemplateFormatVersion: 2010-09-09
Description: AWS CloudFormation Sample Template S3_Website_With_CloudFront_Distribution
Parameters:
  indexFile:
    Type: String
    Description: Name of bucket
    Default: index.html
    AllowedPattern: '(?!-)[a-zA-Z0-9-.]{1,63}(?<!-)'
    ConstraintDescription: must be a valid name.
Mappings:
  Region2S3WebsiteSuffix:
    af-south-1:
      Suffix: .s3-website.af-south-1.amazonaws.com
    ap-east-1:
      Suffix: .s3-website.ap-east-1.amazonaws.com
    ap-northeast-1:
      Suffix: .s3-website-ap-northeast-1.amazonaws.com
    ap-northeast-2:
      Suffix: .s3-website.ap-northeast-2.amazonaws.com
    ap-northeast-3:
      Suffix: .s3-website.ap-northeast-3.amazonaws.com
    ap-south-1:
      Suffix: .s3-website.ap-south-1.amazonaws.com
    ap-southeast-1:
      Suffix: .s3-website-ap-southeast-1.amazonaws.com
    ap-southeast-2:
      Suffix: .s3-website-ap-southeast-2.amazonaws.com
    ca-central-1:
      Suffix: .s3-website.ca-central-1.amazonaws.com
    cn-north-1:
      Suffix: .s3-website.cn-north-1.amazonaws.com.cn
    cn-northwest-1:
      Suffix: .s3-website.cn-northwest-1.amazonaws.com.cn
    eu-central-1:
      Suffix: .s3-website.eu-central-1.amazonaws.com
    eu-north-1:
      Suffix: .s3-website.eu-north-1.amazonaws.com
    eu-south-1:
      Suffix: .s3-website.eu-south-1.amazonaws.com
    eu-west-1:
      Suffix: .s3-website-eu-west-1.amazonaws.com
    eu-west-2:
      Suffix: .s3-website.eu-west-2.amazonaws.com
    eu-west-3:
      Suffix: .s3-website.eu-west-3.amazonaws.com
    me-south-1:
      Suffix: .s3-website.me-south-1.amazonaws.com
    sa-east-1:
      Suffix: .s3-website-sa-east-1.amazonaws.com
    us-east-1:
      Suffix: .s3-website-us-east-1.amazonaws.com
    us-east-2:
      Suffix: .s3-website.us-east-2.amazonaws.com
    us-west-1:
      Suffix: .s3-website-us-west-1.amazonaws.com
    us-west-2:
      Suffix: .s3-website-us-west-2.amazonaws.com
Resources:
  S3BucketForWebsiteContent:
    Type: 'AWS::S3::Bucket'
    Properties:
      AccessControl: PublicRead
  S3BucketPolicyToAllowRead:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref S3BucketForWebsiteContent
      PolicyDocument:
        Statement:
          - Action: 's3:GetObject'
            Effect: Allow
            Resource: !Sub 'arn:aws:s3:::${S3BucketForWebsiteContent}/*'
            Principal: '*'
  cloudfrontoriginaccessidentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: OAI
  WebsiteCDN:
    Type: 'AWS::CloudFront::Distribution'
    Properties:
      DistributionConfig:
        Comment: CDN for S3-backed website
        Enabled: 'true'
        DefaultCacheBehavior:
          ForwardedValues:
            QueryString: 'true'
          TargetOriginId: myS3Origin
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: !Ref indexFile
        Origins:
        - DomainName: !GetAtt S3BucketForWebsiteContent.DomainName
          Id: myS3Origin
          S3OriginConfig:
            OriginAccessIdentity: !Join ['/', ["origin-access-identity/cloudfront", !Ref cloudfrontoriginaccessidentity]]
        Enabled: 'true'
        Comment: CDN
Outputs:
  WebsiteURL:
    Value: !Join 
      - ''
      - - 'http://'
        - !GetAtt 
          - WebsiteCDN
          - DomainName
    Description: The URL of the newly created website
  BucketName:
    Value: !Ref S3BucketForWebsiteContent
    Description: Name of S3 bucket to hold website content
